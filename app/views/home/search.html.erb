<div class="container">
  <form class="navbar-form" role="search">
    <div class="input-group" id="pac-container">
        <input type="text" class="form-control" placeholder="Search by location" id="pac-input">
        <div class="input-group-btn">
            <button class="btn btn-default" type="submit" ><i class="glyphicon glyphicon-search"></i></button>
        </div>
    </div>
  </form>



  <div class="pac-card" id="pac-card">
    <div>
      <div id="title">
        Countries
      </div>
      <div id="country-selector" class="pac-controls">
        <input type="radio" name="type" id="changecountry-usa">
        <label for="changecountry-usa">USA</label>
        <input type="radio" name="type" id="changecountry-usa-and-uot" checked="checked">
        <label for="changecountry-usa-and-uot">USA and unincorporated organized territories</label>
      </div>
    </div>
        <!-- <div id="pac-container">
          <input id="pac-input" type="text"
              placeholder="Enter a location">
        </div> -->
  </div>


    <div class="h-100">
      <div class="row h-100 justify-content-center align-items-center">
        <div class="col-10">
          <div id="map"></div>
          <div id="infowindow-content">
            <img src="" width="16" height="16" id="place-icon">
            <span id="place-name"  class="title"></span><br>
            <span id="place-address"></span>
          </div>
        </div>   
      </div>
    </div>   
    

  <script>
    // This example requires the Places library. Include the libraries=places
    // parameter when you first load the API. For example:
    // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

    function initMap() {
      var map = new google.maps.Map(document.getElementById('map'), {
        center: {lat: 50.064192, lng: -130.605469},
        zoom: 3
      });
      var card = document.getElementById('pac-card');
      var input = document.getElementById('pac-input');
      var countries = document.getElementById('country-selector');

      map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);

      var autocomplete = new google.maps.places.Autocomplete(input);

      // Set initial restrict to the greater list of countries.
      autocomplete.setComponentRestrictions(
          {'country': ['us', 'pr', 'vi', 'gu', 'mp']});

      // Specify only the data fields that are needed.
      autocomplete.setFields(
          ['address_components', 'geometry', 'icon', 'name']);

      var infowindow = new google.maps.InfoWindow();
      var infowindowContent = document.getElementById('infowindow-content');
      infowindow.setContent(infowindowContent);
      var marker = new google.maps.Marker({
        map: map,
        anchorPoint: new google.maps.Point(0, -29)
      });

      autocomplete.addListener('place_changed', function() {
        infowindow.close();
        marker.setVisible(false);
        var place = autocomplete.getPlace();
        if (!place.geometry) {
          // User entered the name of a Place that was not suggested and
          // pressed the Enter key, or the Place Details request failed.
          window.alert("No details available for input: '" + place.name + "'");
          return;
        }

        // If the place has a geometry, then present it on a map.
        if (place.geometry.viewport) {
          map.fitBounds(place.geometry.viewport);
        } else {
          map.setCenter(place.geometry.location);
          map.setZoom(17);  // Why 17? Because it looks good.
        }
        marker.setPosition(place.geometry.location);
        marker.setVisible(true);

        var address = '';
        if (place.address_components) {
          address = [
            (place.address_components[0] && place.address_components[0].short_name || ''),
            (place.address_components[1] && place.address_components[1].short_name || ''),
            (place.address_components[2] && place.address_components[2].short_name || '')
          ].join(' ');
        }

        infowindowContent.children['place-icon'].src = place.icon;
        infowindowContent.children['place-name'].textContent = place.name;
        infowindowContent.children['place-address'].textContent = address;
        infowindow.open(map, marker);
      });

      // Sets a listener on a given radio button. The radio buttons specify
      // the countries used to restrict the autocomplete search.
      function setupClickListener(id, countries) {
        var radioButton = document.getElementById(id);
        radioButton.addEventListener('click', function() {
          autocomplete.setComponentRestrictions({'country': countries});
        });
      }

      setupClickListener('changecountry-usa', 'us');
      setupClickListener(
          'changecountry-usa-and-uot', ['us', 'pr', 'vi', 'gu', 'mp']);
    }
  </script>
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAvuPSxdugPS2FJQibo-i78wVZHWgmKemk&libraries=places&callback=initMap"
      async defer></script>

  <section>
    <div class="h-100">
      <div class="row h-100 justify-content-center align-items-center">
        <div class="col-10">
          <h3 align="center">Upcoming Events</h3>
          <% EventMap.all.each do |event|%>
            <div class="card" style="width: 18rem;">
              <img class="card-img-top" src="..." alt="Card image cap">
              <div class="card-body">
                <h5 class="card-title"><%= event.title %></h5>
                <p class="card-text"><%= event.address %></p>
                <a href="#" class="btn btn-primary">Go somewhere</a>
              </div>
            </div>
            <% end %>
        </div>   
      </div>
    </div>    
  </section>
</div>